# Example: Team usage - governance with built-in form calls team deployment

name: Production Release

on:
  workflow_dispatch:
    inputs:
      no_downtime:
        description: 'I confirm this change does NOT cause downtime'
        type: boolean
        required: false
        default: false
      no_pii_changes:
        description: 'I confirm this change does NOT affect PII data'
        type: boolean
        required: false
        default: false
      change_request:
        description: 'Change Request # (required if major release)'
        type: string
        required: false
        default: ''
      tests_verified:
        description: 'I confirm: Tests passed, Sonar passed, changes verified'
        type: boolean
        required: false
        default: false

jobs:
  governance:
    name: Release Governance Check
    runs-on: ubuntu-latest
    outputs:
      approved: ${{ steps.gov.conclusion == 'success' }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Governance Check
      id: gov
      uses: ./
      with:
        no-downtime: ${{ inputs.no_downtime }}
        no-pii-changes: ${{ inputs.no_pii_changes }}
        change-request: ${{ inputs.change_request }}
        tests-verified: ${{ inputs.tests_verified }}

  deploy:
    name: Deploy Application
    needs: governance
    if: needs.governance.outputs.approved == 'true'
    uses: ./.github/workflows/deploy.yml
    with:
      triggered_by: "governance"